{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "es6": true
  },
  "parser": "@typescript-eslint/parser",
  //기본으로 제공되는 규칙(rule) 외에도 추가적인 규칙(rule)을 사용할 수 있도록 만들어주는 다양한 플러그인(plugin)
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier",
    "react-hooks",
    "import"
  ],
  //대부분의 ESLint 플러그인은 추천 설정을 제공하는데, extends 옵션은 이러한 추천 설정을 사용할 때 사용됨
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:import/recommended"
  ],
  "rules": {
    "indent": ["off", 2, { "SwitchCase": 1 }], // 들여쓰기 몇 칸? 기본 2칸으로 하되, switch문에서는 1칸으로 지정
    "quotes": ["off", "single"], // 쌍따옴표가 아닌 홑따옴표를 사용
    "semi": ["error", "always"], // semi colon을 강제함
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 0 }],
    "comma-dangle": ["error", "always-multiline"], // 두 줄 이상의 경우에는 후행 쉼표를 항상 사용, 한 개 일 때는 사용하지 않음
    "object-curly-spacing": ["error", "always"], // 객체 괄호 앞 뒤 공백 추가
    "space-in-parens": ["error", "never"], // 일반 괄호 앞 뒤 공백 추가
    "computed-property-spacing": ["error", "never"], // 대괄호 앞 뒤 공백 추가하지 않음
    "comma-spacing": ["error", { "before": false, "after": true }], // 반점 앞 뒤 공백: 앞에는 없고, 뒤에는 있게
    "eol-last": ["error", "always"], // line의 가장 마지막 줄에는 개행 넣기
    "no-tabs": ["error", { "allowIndentationTabs": true }], // \t의 사용을 금지하고 tab키의 사용은 허용
    "react-hooks/rules-of-hooks": "error", // 리액트 훅의 순서를 지키게끔 한다. (React는 Hook이 호출되는 순서에 의존하기 때문에)
    "react-hooks/exhaustive-deps": "off", // Checks effect dependencies
    "react/react-in-jsx-scope": "off", // import React from "react"가 필수였던 시기에 필요한 규칙
    "import/no-unresolved": "off",
    "arrow-body-style": ["error", "as-needed"], // 한 줄일 때는 {} 없이, 두 줄 이상이면 {} 포함
    "func-style": ["error", "declaration", { "allowArrowFunctions": true }], // function 및 arrow function 사용
    "no-else-return": "error", // if(cond) return a; else return b; 대신에 if(cond) return a; return b; 사용
    "object-shorthand": ["error", "always"], // const obj = {a, b} 가능
    "arrow-parens": ["error", "always"], // arrow-function 인자가 2개 이상이면 괄호 필수
    "no-multi-spaces": "error", // 스페이스 여러개 금지
    "extends": [
      {
        "plugins": ["@emotion"]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", ["parent", "sibling"], "index"], // import 되는 순서 정의
        "pathGroups": [
          {
            "pattern": "react*", // path가 react로 시작하면
            "group": "external", // external 앞에
            "position": "before"
          }
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always" // group들 사이마다 개행 적용 (group 내부에서 개행 적용 불가)
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
